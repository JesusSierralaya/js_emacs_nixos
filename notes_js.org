#+title: Guide Js

From https://github.com/Asabeneh/30-Days-Of-JavaScript

My code editor is Emacs with the framework doom

* Install nodejs
#+begin_src nix
  environment.systemPackages = with pkgs; [
    # other packages
    # js practice
    nodejs_22
  ];
#+end_src

Dont forget rebuild nixos

* browser
I choose chromium. Install the package because it has the same setting.

* hello world in console


[[./images/Screenshot_20240628_003757.png]]

* Some calculations

[[./images/Screenshot_20240628_005413.png]]

* Add to the config to use html sync browser

First install the browser sync package

#+begin_src nix
  environment.systemPackages = with pkgs; [
    # other packages
    nodePackages.browser-sync
  ];
#+end_src

Then create the function and binding

#+begin_src nix
(defun open-html-with-browser-sync ()
  "Open index.html with Browser Sync."
  (interactive)
  (let ((default-directory (file-name-directory (buffer-file-name))))
    (start-process "browser-sync" "*browser-sync*"
                   "browser-sync" "start" "--server" "--files" "*.html" "*.css" "*.js")
    (browse-url "http://localhost:3000/index.html")))
(map! :leader
      :desc "Open index.html with Browser Sync"
      "o l" #'open-html-with-browser-sync)
#+end_src

With ~SPC o l~ we can call the sync browser

* Button and inline scripts
[[./images/Screenshot_20240628_130513.png]]
* Conventions
- Camel with one hump: variable ~camelWithOneHump~
- Camel with two hump: classes ~CamelWithTwoHump~

** first code blocks
  #+begin_src js :exports both
  console.log("hello!")
  #+end_src

  #+RESULTS:
  : hello!
  : undefined
** Example of variables
#+begin_src js  :exports both
let firstName = 'Jesus'
let lastName = 'Sierralaya'
let age = 100
let isMarried = true

console.log(firstName, lastName, age, isMarried)
#+end_src

#+RESULTS:
: Jesus Sierralaya 100 true
: undefined
** Example of constants
#+begin_src js :exports both
const PI = 3.14
const gravity = 9.81

console.log(gravity, PI)
#+end_src

#+RESULTS:
: 9.81 3.14
: undefined

* Data types
** primitive
#+begin_src js :exports both
let word = 'JavaScript'

word[0] = 'Y'
console.log(word)
#+end_src

#+RESULTS:
: JavaScript
: undefined
** non-primitive: arrays, functions or objects
#+begin_src js :exports both
let nums = [1, 2, 3]
nums[0] = 10

console.log(nums)
#+end_src

#+RESULTS:
: [10 (\, 2) (\, 3)]

#+begin_src js :exports both
let nums = [1, 2, 3]
let numbers = [1, 2, 3]
console.log(nums == numbers)
#+end_src

#+RESULTS:
: false
: undefined

#+begin_src js :export both
let userOne = {
    name: 'Jesus',
    role: 'student',
    country: 'Spain'
}

let userTwo = {
    name: 'Jesus',
    role: 'student',
    country: 'Spain'
}

console.log(userOne == userTwo)
#+end_src

#+RESULTS:
: false
: undefined

=We do not compare non-primitive data.=
They are compared by reference instead of value.

#+begin_src js :exports both
let nums = [1, 2, 3]
let numbers = nums

console.log(nums == numbers)

let userOne = {
    name: 'Jesus'
}
let userTwo = userOne

console.log(userOne == userTwo)
#+end_src

#+RESULTS:
: true
: true
: undefined
** Math object
#+begin_src js :exports both
const PI = Math.PI

console.log(PI)
console.log(Math.round(PI))
console.log(Math.round(9.81))
console.log(Math.floor(PI))
console.log(Math.min(1, 2, 3))
#+end_src

#+RESULTS:
: 3.141592653589793
: 3
: 10
: 3
: 1
: undefined

*** Random
#+begin_src js :exports both
const randNum = Math.random()
console.log(randNum)
#+end_src

#+RESULTS:
: 0.08837059132377467
: undefined
*** Random between 0-10
#+begin_src js :exports both
const num = Math.floor(Math.random() * 11)
console.log(num)
#+end_src

#+RESULTS:
: 7
: undefined
*** Other math functions
#+begin_src js :export both
console.log(Math.sqrt(9))
console.log(Math.log(2))
console.log(Math.E)
console.log(Math.LN2)
// trigo
console.log(Math.sin(60))
#+end_src

#+RESULTS:
: 3
: 0.6931471805599453
: 2.718281828459045
: 0.6931471805599453
: -0.3048106211022167
: undefined
** Strings
Concatenation
#+begin_src js :exports both
let firstName = 'Jesus'
let lastName = 'Sierralaya'
let space = ' '
let country = 'Peru'

let fullName = firstName + space + lastName
let personInfor = 'I am from ' + country

console.log(fullName)
console.log(personInfor)
console.log('Test the new line\n and tab: 1\t3\t5')
#+end_src

#+RESULTS:
: Jesus Sierralaya
: I am from Peru
: Test the new line
:  and tab: 1	3	5
: undefined

Inject data
#+begin_src js :exports both
let a = 2
let b = 3
console.log(`The sum of ${a} and ${b} is ${a + b}`)
console.log(`${a} is greater than ${b}: ${a > b}`)
#+end_src

#+RESULTS:
: The sum of 2 and 3 is 5
: 2 is greater than 3: false
: undefined
length and characters
#+begin_src js :exports both
let lastName = 'Sierralaya'
console.log(lastName.length)

let secondLetter = lastName[1]
console.log('The second letter is \"', secondLetter,'\"')

console.log('Don\'t forgot the \'()\' in functions:', lastName.toUpperCase(), lastName.toLowerCase())
// substr
console.log('\nsubstr(starting index, number of characters)', '\nFrom the start 6 characters:', lastName.substr(0,6), '\nFrom 7 to the end:', lastName.substr(7))
#+end_src

#+RESULTS:
: 10
: The second letter is " i "
: Don't forgot the '()' in functions: SIERRALAYA sierralaya
:
: substr(starting index, number of characters)
: From the start 6 characters: Sierra
: From 7 to the end: aya
: undefined

** trim(), include(), replace(), charAt(), charCodeAt()
#+begin_src js :exports both
let fullName = ' Jesus Sierralaya '
let countries = 'Finland, Sweden, Norway'

//split() didn't work in org mode idk why
// console.log(fullName.split(' '))
// console.log(countries.split(', '))
console.log(fullName)
console.log(fullName.trim(' '))

console.log('include \'Jesus\'?:', fullName.includes('Jesus'))

console.log(fullName.replace('Jesus','J.'))

console.log('charAt returns the value:', fullName.charAt(7))
console.log('charCodeAt returns the ASCII number:', fullName.charCodeAt(7))

#+end_src

#+RESULTS:
:  Jesus Sierralaya
: Jesus Sierralaya
: include 'Jesus'?: true
:  J. Sierralaya
: charAt returns the value: S
: charCodeAt returns the charcode: 83
: undefined
** indexOf(), indexOf(), concat(), startsWith(), search()
#+begin_src js :exports both
let grettings = 'Hi! I\'m Jesus Sierralaya. Yes that\'s my name, Jesus Sierralaya'
let fullName = 'Jesus Sierralaya'
let iAm = 'I\'m '

// indexOf()
console.log(fullName.indexOf('J'))
console.log(fullName.indexOf('S'))
console.log(fullName.indexOf('o')) //the index doesn't exist

// lastIndexOf()
console.log(grettings.lastIndexOf('Sierralaya'))

// concat()
console.log(iAm.concat("JS"))

// startsWith()
console.log(grettings.startsWith('Hi'))
console.log(grettings.endsWith('ya'))

// search() returns the index of the first match
console.log(grettings.search('J'))

//repeat()
// console.log(fullName.repeat(3))
#+end_src

#+RESULTS:
: 0
: 6
: -1
: 52
: I'm JS
: true
: true
: 8
: undefined
** match()
#+begin_src js :exports both
let grettings = 'Hi! I\'m Jesus Sierralaya. Yes that\'s my name, Jesus Sierralaya'

// console.log(greetings.match('Jesus'))
// i: case insensitive
console.log(grettings.match(/jesus/i))
#+end_src

#+RESULTS:
: ['Jesus '(\, index:) 8 (\, input:) "Hi! I'm Jesus Sierralaya. Yes that's my name, Jesus Sierralaya" (\, groups:) undefined]

** match to find digits
#+begin_src js :exports both
let txt = 'In 2019, I ran 30 Days of Python. Now, in 2020 I am super exited to start this challenge'
let regEx = /\d+/

console.log(txt.match(regEx))  // ["2", "0", "1", "9", "3", "0", "2", "0", "2", "0"]
// console.log(txt.match(/\d+/g)) // ["2019", "30", "2020"]
#+end_src

#+RESULTS:
: ['2019 '(\, index:) 3 (\, input:) 'In 2019 (\, I) ran 30 Days of Python. Now (\, in) 2020 I am super exited to start this challenge '(\, groups:) undefined]
** typeof()
#+begin_src js :exports both
let fullName = 'Jesus Sierralaya'
let job

console.log(typeof fullName)
console.log(typeof true)
console.log(typeof NaN)
console.log(typeof job)
console.log(typeof null)
#+end_src

#+RESULTS:
: string
: boolean
: number
: undefined
: object
: undefined
** String to Int
#+begin_src js :exports both
let num = '10'

console.log(typeof parseInt(num))
console.log(typeof Number(num))
console.log(typeof +num)

let numFloat = '9.81'
console.log('\n')
console.log(parseInt(numFloat)) // float to int
console.log(parseFloat(numFloat))
console.log(Number(numFloat))
console.log(+numFloat)
#+end_src

#+RESULTS:
#+begin_example
number
number
number


9
9.81
9.81
9.81
undefined
#+end_example
* Booleans
#+begin_src js :exports both
// equivalent?
console.log(1 == true);
console.log(undefined == null);
// exactly the same?
console.log(1 === true)
console.log(undefined === null);
//
console.log('mango'.length != 'avocado'.length);
console.log('mango'.length < 'avocado'.length);
#+end_src

#+RESULTS:
: true
: true
: false
: false
: true
: true
: undefined
Always use 3 equals unless you have a good reason to use 2.
* Logical operators
- &&: gets true only if the two operands are true
- ||: gets true either of the operand is true
- !: gets true to false and false to true
#+begin_src js :exports both
const trueVar = 4 > 3
const falseVar = 4 < 3

console.log(
  'Ampersand',
  `\ntrue && true = ${trueVar && trueVar}`,
  `\ntrue && false = ${trueVar && falseVar}`,
  `\nfalse && false = ${falseVar && falseVar}\n`
);
console.log(
  'Pipe',
  `\ntrue || true = ${trueVar || trueVar}`,
  `\ntrue || false = ${trueVar || falseVar}`,
  `\nfalse || false = ${falseVar || falseVar}`
);

let isLightOn = true
let isLightOff = !isLightOn
console.log(
  'Negation',
  `\n!true = ${!trueVar}`,
  `\nisLightOff = ${isLightOff}`
);
#+end_src

#+RESULTS:
#+begin_example
Ampersand
true && true = true
true && false = false
false && false = false

Pipe
true || true = true
true || false = true
false || false = false
Negation
!true = false
isLightOff = false
undefined
#+end_example
* Increment/decrement operator
#+begin_src js :exports both
let count = 0
console.log(count, ++count, count);
count = 0
console.log(count, count++, count);

count = 0
console.log(count, --count, count);
count = 0
console.log(count, count--, count);
console.log(count--, count--, count);
#+end_src

#+RESULTS:
: 0 1 1
: 0 0 1
: 0 -1 -1
: 0 0 -1
: -1 -2 -3
: undefined
* Ternary Operators
Another way to write a condition
#+begin_src js :exports both
let isRaining = true
isRaining
    ? console.log('You need a rain coat')
    : console.log('No need a rain coat');

isRaining = false
isRaining
    ? console.log('You need a rain coat')
    : console.log('No need a rain coat');

let thirsty = false
thirsty
    ? console.log('Drink some water')
    : console.log('Don\'t drink more water')

let number = 5
number > 0
    ? console.log(`${number} is a positive number`)
    : console.log(`${number} is a negativee number`)
#+end_src

#+RESULTS:
: You need a rain coat
: No need a rain coat
: Don't drink more water
: 5 is a positive number
: undefined
* Date objects
#+begin_src js :exports both
const now = new Date()
console.log(now);
console.log(
  `Getting full year: ${now.getFullYear()}`,
  `\nGetting month: ${now.getMonth()}, (from 0 to 11)`,
  `\nGetting date: ${now.getDate()}`,
  `\nGetting day: ${now.getDay()}`,
  `\nGetting hours: ${now.getHours()}`,
  `\nGetting minutes: ${now.getMinutes()}`,
  `\nGetting seconds: ${now.getSeconds()}`,
  `\nGetting time (getTime): ${now.getTime()}`,
  `\nGetting time (Date.now): ${Date.now()}`,
);
#+end_src

#+RESULTS:
#+begin_example
2024-06-30T18:03:41.548Z
Getting full year: 2024
Getting month: 5, (from 0 to 11)
Getting date: 30
Getting day: 0
Getting hours: 20
Getting minutes: 3
Getting seconds: 41
Getting time (getTime): 1719770621548
Getting time (Date.now): 1719770621552
undefined
#+end_example
* Day 4 Conditionals
** if
#+begin_src js :exports both
let num = 'a'
if (num > 0){
    console.log(`${num} is a positive number`);
} else if (num < 0) {
    console.log(`The number ${num} is negative`);
} else if (num == 0) {
    console.log(`The ${num} is zero`);
} else {
    console.log(`${num} is not a number`);
}
#+end_src

#+RESULTS:
: a is not a number
: undefined
** if else
#+begin_src js :exports both
// sunny cloudy rainy
let weather = 'idk'
if (weather == 'rainy'){
    console.log('Take an umbrella');
} else if (weather == 'sunny'){
    console.log('You can go out');
} else if (weather == 'cloudy'){
    console.log('Maybe you nned a jacket');
} else {
    console.log('Select among \'sunny\', \'cloudy\' and \'rainy\'' );
}
#+end_src

#+RESULTS:
: Select among 'sunny', 'cloudy' and 'rainy'
: undefined
** switch
#+begin_src js :exports both
let weather = 'a'
switch (weather){
    case 'rainy':
        console.log('take an umbrella');
        break
    case 'cloudy':
        console.log('Take a jacket');
        break
    case 'sunny':
        console.log('You can go out');
        break
    default:
        console.log('You must select among \'rainy\', \'cloudy\' and \'sunny\'');
}
#+end_src

#+RESULTS:
: You must select among 'rainy', 'cloudy' and 'sunny'
: undefined
