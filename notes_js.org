#+title: Guide Js

From https://github.com/Asabeneh/30-Days-Of-JavaScript

My code editor is Emacs with the framework doom

* Install nodejs
#+begin_src nix
  environment.systemPackages = with pkgs; [
    # other packages
    # js practice
    nodejs_22
  ];
#+end_src

Dont forget rebuild nixos

* browser
I choose chromium. Install the package because it has the same setting.

* hello world in console


[[./images/Screenshot_20240628_003757.png]]

* Some calculations

[[./images/Screenshot_20240628_005413.png]]

* Add to the config to use html sync browser

First install the browser sync package

#+begin_src nix
  environment.systemPackages = with pkgs; [
    # other packages
    nodePackages.browser-sync
  ];
#+end_src

Then create the function and binding

#+begin_src nix
(defun open-html-with-browser-sync ()
  "Open index.html with Browser Sync."
  (interactive)
  (let ((default-directory (file-name-directory (buffer-file-name))))
    (start-process "browser-sync" "*browser-sync*"
                   "browser-sync" "start" "--server" "--files" "*.html" "*.css" "*.js")
    (browse-url "http://localhost:3000/index.html")))
(map! :leader
      :desc "Open index.html with Browser Sync"
      "o l" #'open-html-with-browser-sync)
#+end_src

With ~SPC o l~ we can call the sync browser

* Button and inline scripts
[[./images/Screenshot_20240628_130513.png]]
* Conventions
- Camel with one hump: variable ~camelWithOneHump~
- Camel with two hump: classes ~CamelWithTwoHump~

** first code blocks
  #+begin_src js :exports both
  console.log("hello!")
  #+end_src

  #+RESULTS:
  : hello!
  : undefined
** Example of variables
#+begin_src js  :exports both
let firstName = 'Jesus'
let lastName = 'Sierralaya'
let age = 100
let isMarried = true

console.log(firstName, lastName, age, isMarried)
#+end_src

#+RESULTS:
: Jesus Sierralaya 100 true
: undefined
** Example of constants
#+begin_src js :exports both
const PI = 3.14
const gravity = 9.81

console.log(gravity, PI)
#+end_src

#+RESULTS:
: 9.81 3.14
: undefined

* Data types
** primitive
#+begin_src js :exports both
let word = 'JavaScript'

word[0] = 'Y'
console.log(word)
#+end_src

#+RESULTS:
: JavaScript
: undefined
** non-primitive
#+begin_src js :exports both
let nums = [1, 2, 3]
nums[0] = 10

console.log(nums)
#+end_src

#+RESULTS:
: [10 (\, 2) (\, 3)]

#+begin_src js :exports both
let nums = [1, 2, 3]
let numbers = [1, 2, 3]
console.log(nums == numbers)
#+end_src

#+RESULTS:
: false
: undefined
